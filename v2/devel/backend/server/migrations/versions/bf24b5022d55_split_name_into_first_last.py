"""split name into first/last

Revision ID: bf24b5022d55
Revises: 65d3a08090ac
Create Date: 2020-02-04 06:53:13.180451

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bf24b5022d55'
down_revision = '65d3a08090ac'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('applications', sa.Column('firstname', sa.String(length=255), nullable=False))
    op.add_column('applications', sa.Column('lastname', sa.String(length=255), nullable=False))
    op.drop_constraint(u'applications_email_key', 'applications', type_='unique')
    op.drop_constraint(u'applications_name_key', 'applications', type_='unique')
    op.drop_column('applications', 'name')
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('applications', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.create_unique_constraint(u'applications_name_key', 'applications', ['name'])
    op.create_unique_constraint(u'applications_email_key', 'applications', ['email'])
    op.drop_column('applications', 'lastname')
    op.drop_column('applications', 'firstname')
    # ### end Alembic commands ###


def upgrade_users():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_users():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

