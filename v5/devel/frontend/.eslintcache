[{"/home/tvalentic/sandbox/display/v1/devel/frontend/src/index.js":"1","/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/index.js":"2","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/index.js":"3","/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/store.js":"4","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/app.js":"5","/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/index.js":"6","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/header/index.js":"7","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/footer/index.js":"8","/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/auth.model.js":"9","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/header/header.js":"10","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/footer/footer.js":"11","/home/tvalentic/sandbox/display/v1/devel/frontend/src/services/index.js":"12","/home/tvalentic/sandbox/display/v1/devel/frontend/src/services/auth.service.js":"13","/home/tvalentic/sandbox/display/v1/devel/frontend/src/services/api.service.js":"14","/home/tvalentic/sandbox/display/v1/devel/frontend/src/services/admin.service.js":"15","/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/index.js":"16","/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/fetch_wrapper.js":"17","/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/private_route.js":"18","/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/admin_route.js":"19","/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/auth_header.js":"20","/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/data.model.js":"21","/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/ui.model.js":"22","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/routes.js":"23","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/index.js":"24","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/overview/index.js":"25","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/about/index.js":"26","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/wireframe/index.js":"27","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/cesium/index.js":"28","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/overview/overview.js":"29","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/about/about.js":"30","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/wireframe/wireframe.js":"31","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/cesium/cesium.js":"32","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/wireframe/viewer.js":"33","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/wireframe/controls.js":"34","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/overview/flight_table.js":"35","/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/print_kit.js":"36","/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/components/index.js":"37","/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/components/sortable_table.js":"38","/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/flight.model.js":"39"},{"size":823,"mtime":1616788146187,"results":"40","hashOfConfig":"41"},{"size":24,"mtime":1574821879000,"results":"42","hashOfConfig":"41"},{"size":22,"mtime":1570677310000,"results":"43","hashOfConfig":"41"},{"size":225,"mtime":1614209712460,"results":"44","hashOfConfig":"41"},{"size":405,"mtime":1616070562607,"results":"45","hashOfConfig":"41"},{"size":217,"mtime":1618920425950,"results":"46","hashOfConfig":"41"},{"size":25,"mtime":1571081361000,"results":"47","hashOfConfig":"41"},{"size":25,"mtime":1571093691000,"results":"48","hashOfConfig":"41"},{"size":500,"mtime":1574822574000,"results":"49","hashOfConfig":"41"},{"size":1174,"mtime":1616070776163,"results":"50","hashOfConfig":"41"},{"size":312,"mtime":1576270324000,"results":"51","hashOfConfig":"41"},{"size":93,"mtime":1574869897000,"results":"52","hashOfConfig":"41"},{"size":2399,"mtime":1599416176000,"results":"53","hashOfConfig":"41"},{"size":1364,"mtime":1618919803228,"results":"54","hashOfConfig":"41"},{"size":1321,"mtime":1599416255000,"results":"55","hashOfConfig":"41"},{"size":152,"mtime":1616025391363,"results":"56","hashOfConfig":"41"},{"size":211,"mtime":1599415238000,"results":"57","hashOfConfig":"41"},{"size":423,"mtime":1574870614000,"results":"58","hashOfConfig":"41"},{"size":396,"mtime":1574869431000,"results":"59","hashOfConfig":"41"},{"size":326,"mtime":1574871227000,"results":"60","hashOfConfig":"41"},{"size":4377,"mtime":1618920859149,"results":"61","hashOfConfig":"41"},{"size":1086,"mtime":1618944791573,"results":"62","hashOfConfig":"41"},{"size":737,"mtime":1618334802131,"results":"63","hashOfConfig":"41"},{"size":107,"mtime":1616214751607,"results":"64","hashOfConfig":"41"},{"size":27,"mtime":1615596188056,"results":"65","hashOfConfig":"41"},{"size":24,"mtime":1615596243877,"results":"66","hashOfConfig":"41"},{"size":28,"mtime":1615596273937,"results":"67","hashOfConfig":"41"},{"size":25,"mtime":1615596222748,"results":"68","hashOfConfig":"41"},{"size":1404,"mtime":1616949102720,"results":"69","hashOfConfig":"41"},{"size":184,"mtime":1615662583423,"results":"70","hashOfConfig":"41"},{"size":351,"mtime":1618948321559,"results":"71","hashOfConfig":"41"},{"size":528,"mtime":1615662493789,"results":"72","hashOfConfig":"41"},{"size":12370,"mtime":1618948284178,"results":"73","hashOfConfig":"41"},{"size":5549,"mtime":1618946993941,"results":"74","hashOfConfig":"41"},{"size":1192,"mtime":1618311764769,"results":"75","hashOfConfig":"41"},{"size":5702,"mtime":1616027557582,"results":"76","hashOfConfig":"41"},{"size":33,"mtime":1616021702576,"results":"77","hashOfConfig":"41"},{"size":3788,"mtime":1616429079587,"results":"78","hashOfConfig":"41"},{"size":1242,"mtime":1618433568488,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"131lfno",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/home/tvalentic/sandbox/display/v1/devel/frontend/src/index.js",[],["162","163"],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/store.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/app.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/header/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/footer/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/auth.model.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/header/header.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/footer/footer.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/services/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/services/auth.service.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/services/api.service.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/services/admin.service.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/fetch_wrapper.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/private_route.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/admin_route.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/auth_header.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/data.model.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/ui.model.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/routes.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/overview/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/about/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/wireframe/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/cesium/index.js",[],["164","165"],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/overview/overview.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/about/about.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/wireframe/wireframe.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/cesium/cesium.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/wireframe/viewer.js",["166"],"import React, { useRef, useEffect, useMemo, Suspense } from 'react'\nimport { useStoreState, useStoreActions, StoreProvider } from 'easy-peasy'\nimport { Canvas, useFrame, useThree,  useLoader, extend } from '@react-three/fiber'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { Sky } from '@react-three/drei'\n//import { Drone } from './drone'\n\nimport spriteImg from './disc.png'\n\nimport * as THREE from 'three'\n\nimport { store } from 'store'\n\nextend({ OrbitControls })\n\n//////////////////////////////////////////////////////////////////////////\n//\n//  Coordinate frame notes\n//\n//     Up\n//     EL=0 el=90\n//     Y (z)\n//     |___ X (y) AZ=90 az=0 North\n//    / \n//   Z (x) AZ=0 az=90 East\n//\n//      Data ThreeJS \n//      x    Z \n//      y    X\n//      z    Y\n//\n//      (y,z,x) -> (X,Y,Z)\n//\n//  ThreeJS elevation (EL) 0-deg=vertical points up Y, 90-deg is in XZ plane\n//  Data elevation (el) 0-deg=horizontal is in the xy plane\n//\n//  ThreeJS azimuth (AZ) 0-deg along Z\n//  Data azimith (az) 0-deg along y\n//\n//////////////////////////////////////////////////////////////////////////\n\nconst rae2enu = (r,az,el) => {\n    const x = r*Math.cos(el)*Math.sin(az)\n    const y = r*Math.cos(el)*Math.cos(az)\n    const z = r*Math.sin(el)\n\n    return [x,y,z]\n}\n\n\nconst CurrentPoint = ({data}, ...props) => {\n\n    const t = useRef(0)\n    const index = useRef(0)\n    const nextRef = useRef(new THREE.Vector3())\n\n    const meshRef = useRef()\n    const { camera } = useThree()\n    const view = useStoreState((state) => state.ui.view)\n    const paused = useStoreState((state) => state.ui.pause)\n    const speed = useStoreState((state) => state.ui.speed)\n\n    //const setClock = useZustandStore(state => state.setClock) \n    //const setClock = useStoreActions(state => state.flight.set_clock) \n    const updateClock = useStoreActions(state => state.flight.update_clock) \n\n    useFrame(({ clock }) => {\n\n        const mesh = meshRef.current\n        const next = nextRef.current\n\n        if (data?.length>0 && !paused) {\n\n            if ((clock.elapsedTime-t.current)>=1/speed) {  \n                t.current = clock.elapsedTime\n\n                const k = index.current\n\n                const [x,y,z] = rae2enu(data[k].r,data[k].az,data[k].el)\n                next.set(y,z,x)\n                updateClock(data[k].timestamp)\n\n                index.current = (k+1) % data.length\n            }\n        }\n\n        mesh.position.lerp(next,speed/60)\n\n        if (view === 'Drone') {\n            camera.position.copy(mesh.position)\n            camera.translateZ(400)\n            camera.lookAt(mesh.position)\n        } else if (view === 'World') {\n            camera.position.set(2000,1000,0)\n            camera.translateZ(0)\n            camera.lookAt(mesh.position)\n        } else if (view === 'Radar') {\n            camera.position.set(200,0,0)\n            camera.translateZ(0)\n            camera.lookAt(mesh.position)\n        } else if (view === 'Fixed') {\n            camera.position.set(2000,2000,0)\n            camera.translateZ(0)\n            camera.lookAt(0,0,0)\n        } else if (view === 'Overhead') {\n            camera.position.set(0,15000,0)\n            camera.translateZ(0)\n            camera.lookAt(0,0,0)\n        } else if (view === 'Manual') {\n            camera.translateZ(0)\n        }\n\n    })\n\n    return (\n      <mesh {...props} ref={meshRef} >\n        <sphereBufferGeometry args={[10,15,20]} />\n        <meshStandardMaterial color='green' />\n      </mesh>\n    )\n}\n\nconst Radar = props => {\n\n    const mesh = useRef()\n\n    useFrame(() => {\n        mesh.current.rotation.y += 0.01\n        })\n\n    useEffect(() => {\n        mesh.current.geometry.translate(0,25,0)\n    },[])\n\n    return (\n      <mesh {...props} ref={mesh} >\n        <boxBufferGeometry args={[20,50,20]} /> \n        <meshStandardMaterial color='orange'/>\n      </mesh>\n    )\n}\n\nconst CameraControls = () => {\n    const { camera, gl: { domElement } } = useThree()\n    const view = useStoreState((state) => state.ui.view)\n    const controls = useRef()\n\n    useFrame((state) => { \n        if (view === 'Manual') {\n            controls.current.update() \n        }\n    })\n\n    return <orbitControls ref={controls} args={[camera, domElement]} />\n}\n\nconst RadarView = ({data,timemap}) => {\n\n    // Based on https://codesandbox.io/s/eager-noyce-6rvwr?from-embed=&file=/src/index.js\n\n    const colorRef = useRef(new THREE.Color())\n    const attrib = useRef()\n    const sprite = useLoader(THREE.TextureLoader,spriteImg)\n\n    //const clock = useZustandStore(state => state.clock) \n    const clock = useStoreState(state => state.flight.clock) \n\n    useEffect(() => {\n\n        if (data.length===0)\n            return\n\n        const color = colorRef.current\n\n        timemap.forEach(step => {\n\n            if (step.t > clock) {\n                color.setHSL(1,1,0.95)\n            } else {\n                const lum = (Math.min(clock-step.t,10)/10)*0.4 + 0.5\n                color.setHSL(1,1,lum)\n            }\n\n            for (let k=step.start; k<=step.stop; k++) {\n                attrib.current.array[k*3+0] = color.r \n                attrib.current.array[k*3+1] = color.g \n                attrib.current.array[k*3+2] = color.b \n            }\n        })\n\n        attrib.current.needsUpdate = true\n\n    },[data,timemap,clock])\n\n   \n    const [positions, colors] = useMemo(() => {\n\n        let positions = []\n        let colors = []\n\n        for (let k=0; k<data.length; k++) {\n            const [x,y,z] = rae2enu(data[k].r,data[k].az,data[k].el)\n\n            positions.push(y)\n            positions.push(z)\n            positions.push(x)\n\n            colors.push(0.9,0.9,0.9)\n        }\n\n        return [new Float32Array(positions), new Float32Array(colors)]\n\n    },[data])\n\n    return (\n        <points>\n          <bufferGeometry attach=\"geometry\">\n            <bufferAttribute attachObject={[\"attributes\",\"position\"]} \n                count={positions.length/3} array={positions} itemSize={3} />\n            <bufferAttribute ref={attrib} attachObject={[\"attributes\",\"color\"]} \n                count={colors.length/3} array={colors} itemSize={3} /> \n          </bufferGeometry>\n          <pointsMaterial attach=\"material\" map={sprite}\n            vertexColors size={10} sizeAttenuation={true} \n            alphaTest={0.5} transparent={true} />\n        </points> \n    )\n}\n\nconst TruthView = ({data}) => {\n\n    const colorRef = useRef(new THREE.Color())\n    const obj3DRef = useRef(new THREE.Object3D())\n    //const indexRef = useRef(0)\n    const meshRef = useRef()\n\n    const numPoints = data.length\n/*\n    useFrame(() => {\n        if (data.length===0)\n            return\n\n        const color = colorRef.current\n        const mesh = meshRef.current\n        const index = indexRef.current\n\n        color.set(0x008000)\n        mesh.setColorAt(index,color)\n        mesh.instanceColor.needsUpdate = true\n        indexRef.current = (index+1)%data.length\n    }) \n*/\n    useEffect(() => {\n\n        if (data.length===0)\n            return\n\n        const mesh = meshRef.current\n        const color = colorRef.current\n        const obj3d = obj3DRef.current\n\n        for (let k=0; k<data.length; k++) {\n            const [x,y,z] = rae2enu(data[k].r,data[k].az,data[k].el)\n            obj3d.position.set(y,z,x)\n            obj3d.updateMatrix()\n            mesh.setMatrixAt(k,obj3d.matrix)\n     \n            color.set(0xC0C0C0)\n            mesh.setColorAt(k,color)\n        }\n\n        mesh.instanceMatrix.needsUpdate = true\n        mesh.instanceColor.needsUpdate = true\n\n    },[data])\n\n    return (\n        <instancedMesh\n            ref={meshRef}\n            key={numPoints}\n            args={[null,null,numPoints]}\n            frustumCulled={false}\n        >\n          <boxBufferGeometry attach=\"geometry\" args={[1.5,1.5,1.5]} />\n          <meshStandardMaterial attach=\"material\" color={0xc0c0c0} />\n        </instancedMesh>\n    )\n}\n\nconst TrackView = ({data,timemap}) => {\n\n    const colorRef = useRef(new THREE.Color())\n    const attrib = useRef()\n    //const sprite = useLoader(THREE.TextureLoader,spriteImg)\n    const clock = useStoreState(state => state.flight.clock) \n\n    useEffect(() => {\n\n        if (data.length===0)\n            return\n\n        const color = colorRef.current\n        const duration = 20\n\n        timemap.forEach(step => {\n\n            if (step.t > clock) {\n                color.setHSL(0.64,1,0.95)\n            } else {\n                const lum = (Math.min(clock-step.t,duration)/duration)*0.4 + 0.5\n                color.setHSL(0.64,1,lum)\n            }\n\n            for (let k=step.start; k<=step.stop; k++) {\n                attrib.current.array[k*3+0] = color.r \n                attrib.current.array[k*3+1] = color.g \n                attrib.current.array[k*3+2] = color.b \n            }\n        })\n\n        attrib.current.needsUpdate = true\n\n    },[data,timemap,clock])\n\n   \n    const [positions, colors] = useMemo(() => {\n\n        let positions = []\n        let colors = []\n\n        for (let k=0; k<data.length; k++) {\n            positions.push(data[k].y)\n            positions.push(data[k].z)\n            positions.push(data[k].x)\n\n            colors.push(0.9,0.9,0.9)\n        }\n\n        return [new Float32Array(positions), new Float32Array(colors)]\n\n    },[data])\n\n    return (\n        <points>\n          <bufferGeometry attach=\"geometry\">\n            <bufferAttribute attachObject={[\"attributes\",\"position\"]} \n                count={positions.length/3} array={positions} itemSize={3} />\n            <bufferAttribute ref={attrib} attachObject={[\"attributes\",\"color\"]} \n                count={colors.length/3} array={colors} itemSize={3} /> \n          </bufferGeometry>\n          <pointsMaterial attach=\"material\" \n            vertexColors size={10} sizeAttenuation={true} \n            alphaTest={0.5} transparent={true} />\n        </points> \n    )\n}\n\n\nconst TrackViewMesh = ({data}) => {\n\n    const colorRef = useRef(new THREE.Color())\n    const obj3DRef = useRef(new THREE.Object3D())\n    const meshRef = useRef()\n\n    const numPoints = data.length\n    \n    useEffect(() => {\n\n        if (data.length===0)\n            return\n\n        const mesh = meshRef.current\n        const color = colorRef.current\n        const obj3d = obj3DRef.current\n\n        for (let k=0; k<data.length; k++) {\n            obj3d.position.set(data[k].y,data[k].z,data[k].x)\n            obj3d.updateMatrix()\n            mesh.setMatrixAt(k,obj3d.matrix)\n     \n            color.set(0x000000)\n            mesh.setColorAt(k,color)\n        }\n\n        mesh.instanceMatrix.needsUpdate = true\n        mesh.instanceColor.needsUpdate = true\n\n    },[data])\n\n    return (\n        <instancedMesh\n            ref={meshRef}\n            key={numPoints}\n            args={[null,null,numPoints]}\n            frustumCulled={false}\n        >\n          <boxBufferGeometry attach=\"geometry\" args={[1.5,1.5,1.5]} />\n          <meshStandardMaterial attach=\"material\" color={0xc0c0c0} />\n        </instancedMesh>\n    )\n}\n\n\n// Add another StoreProvider here. See this issue:\n// https://github.com/pmndrs/react-three-fiber/issues/262 \n\nconst DataViewer = () => {\n\n    const data = useStoreState((state) => state.data)\n    const feature = useStoreState((state) => state.ui.feature)\n    \n    const { radar_data, radar_time_map, truth_data } = data\n    const { track_data, track_time_map } = data\n\n    return (\n      <Canvas  camera={{ far:15000, fov: 30, position: [500,500,500] }} >\n        <StoreProvider store={store}>\n          <color attach=\"background\" args={['darkgray']} />\n          <ambientLight />\n          <pointLight position={[2000,2000,2000]} />\n          <Sky distance={450000} sunPosition={[0,1,0]} inclination={0} azimuth={0.25} />\n          <gridHelper args={[12000,60,'gray','gray']} />\n          <gridHelper args={[12000,12,'#333','#333']} />\n          <Radar />\n          <Suspense fallback={null}>\n            { feature.radar && radar_data.length>0 ? <RadarView data={radar_data} timemap={radar_time_map} /> : null }\n            { feature.tracks && track_data.length>0 ? <TrackView data={track_data} timemap={track_time_map} /> : null }\n            { feature.truth && truth_data.length>0 ? <TruthView data={truth_data} /> : null }\n          </Suspense>\n          <CameraControls />\n          <CurrentPoint data={truth_data} />\n        </StoreProvider>\n      </Canvas>\n    )\n}\n\nexport { DataViewer }\n","/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/wireframe/controls.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/app/pages/overview/flight_table.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/helpers/print_kit.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/components/index.js",[],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/support/components/sortable_table.js",[],["167","168"],"/home/tvalentic/sandbox/display/v1/devel/frontend/src/store/model/flight.model.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"169","replacedBy":"173"},{"ruleId":"171","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":359,"column":7,"nodeType":"177","messageId":"178","endLine":359,"endColumn":20},{"ruleId":"169","replacedBy":"179"},{"ruleId":"171","replacedBy":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],"no-unused-vars","'TrackViewMesh' is assigned a value but never used.","Identifier","unusedVar",["181"],["182"],"no-global-assign","no-unsafe-negation"]